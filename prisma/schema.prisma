// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        Int              @id @default(autoincrement())
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  name      String
  User      CompanyMembers[]
  Product   Product[]
}

model User {
  id        Int              @id @default(autoincrement())
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  email     String
  company   CompanyMembers[]
}

model CompanyMembers {
  company    Company  @relation(fields: [companyId], references: [id])
  companyId  Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  assignedAt DateTime @default(now())
  role       String

  @@id([userId, companyId])
}

model Product {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  name            String
  price           Float             @default(0.00)
  company         Company           @relation(fields: [companyId], references: [id])
  companyId       Int
  SoldProduct     SoldProduct[]
  InvoicedProduct InvoicedProduct[]
}

model Invoice {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  due             DateTime
  seller          String
  taxRate         Float
  shippingCost    Float
  subTotal        Float
  total           Float
  InvoicedProduct InvoicedProduct[]
}

model InvoicedProduct {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  cost        Float
  invoice     Invoice       @relation(fields: [invoiceId], references: [id])
  invoiceId   Int
  product     Product       @relation(fields: [productId], references: [id])
  productId   Int
  SoldProduct SoldProduct[]
}

model SoldProduct {
  id                Int             @id @default(autoincrement())
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  numberSold        Int
  totalAmount       Float
  dateSold          DateTime
  invoicedProduct   InvoicedProduct @relation(fields: [invoicedProductId], references: [id])
  invoicedProductId Int
  Product           Product?        @relation(fields: [productId], references: [id])
  productId         Int?
}
